{"ast":null,"code":"import rootReducer from \"../reducers\";\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\nimport { RESPONSE } from '../constants';\nimport { sendData } from '../api';\nimport { setData, sendUserData } from '../actions';\n\nconst getDataToSend = state => state.dataToSend;\n\nfunction* handleSendUserData() {\n  const dataToSend = yield select(getDataToSend);\n  const response = yield call(sendData, dataToSend);\n  yield put(setData(response));\n}\n\nfunction* handleUpdateUserData() {\n  alert(\"updating\");\n}\n\nfunction* sendDataSaga() {\n  yield takeEvery(RESPONSE.SEND, handleSendUserData);\n  yield takeEvery(RESPONSE.UPDATE, handleUpdateUserData);\n}\n\nexport default sendDataSaga;","map":{"version":3,"sources":["/Users/govind.singh/Desktop/GitHub React/React/react-saga/src/sagas/sendDataSaga.js"],"names":["rootReducer","takeEvery","call","put","select","RESPONSE","sendData","setData","sendUserData","getDataToSend","state","dataToSend","handleSendUserData","response","handleUpdateUserData","alert","sendDataSaga","SEND","UPDATE"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA2C,oBAA3C;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AACA,SAAQC,OAAR,EAAiBC,YAAjB,QAAoC,YAApC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAUA,KAAK,CAACC,UAAtC;;AAEA,UAAUC,kBAAV,GAA8B;AAC1B,QAAMD,UAAU,GAAG,MAAMP,MAAM,CAACK,aAAD,CAA/B;AACA,QAAMI,QAAQ,GAAG,MAAMX,IAAI,CAACI,QAAD,EAAWK,UAAX,CAA3B;AACA,QAAMR,GAAG,CAACI,OAAO,CAACM,QAAD,CAAR,CAAT;AACH;;AAED,UAAUC,oBAAV,GAAgC;AAC5BC,EAAAA,KAAK,CAAC,UAAD,CAAL;AACH;;AAED,UAAUC,YAAV,GAAwB;AACpB,QAAMf,SAAS,CAACI,QAAQ,CAACY,IAAV,EAAgBL,kBAAhB,CAAf;AACA,QAAMX,SAAS,CAACI,QAAQ,CAACa,MAAV,EAAkBJ,oBAAlB,CAAf;AACH;;AAED,eAAeE,YAAf","sourcesContent":["import rootReducer from \"../reducers\"\nimport {takeEvery, call, put, select} from 'redux-saga/effects';\nimport {RESPONSE} from '../constants';\nimport {sendData} from '../api'\nimport {setData, sendUserData} from '../actions';\n\nconst getDataToSend = (state)=> state.dataToSend;\n\nfunction* handleSendUserData(){\n    const dataToSend = yield select(getDataToSend);\n    const response = yield call(sendData, dataToSend);\n    yield put(setData(response));\n}\n\nfunction* handleUpdateUserData(){\n    alert(\"updating\")\n}\n\nfunction* sendDataSaga(){\n    yield takeEvery(RESPONSE.SEND, handleSendUserData)\n    yield takeEvery(RESPONSE.UPDATE, handleUpdateUserData)\n}\n\nexport default sendDataSaga;"]},"metadata":{},"sourceType":"module"}
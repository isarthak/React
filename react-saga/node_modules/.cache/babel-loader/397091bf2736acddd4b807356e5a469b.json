{"ast":null,"code":"// get your own key from unsplash please ðŸ˜‡\nconst KEY = '?client_id=5f96323678d05ff0c4eb264ef184556868e303b32a2db88ecbf15746e6f25e02';\nconst URL = `https://api.unsplash.com/photos/`;\n\nconst fetchImages = async page => {\n  const response = await fetch(`${URL}${KEY}&per_page=3&page=${page}`);\n  const data = await response.json();\n\n  if (response.status >= 400) {\n    throw new Error(data.errors);\n  }\n\n  return data;\n};\n\nconst fetchImageStats = async id => {\n  const response = await fetch(`${URL}/${id}/statistics${KEY}`);\n  const data = await response.json();\n\n  if (response.status >= 400) {\n    throw new Error(data.errors);\n  }\n\n  return data;\n};\n\nexport { fetchImages, fetchImageStats };","map":{"version":3,"sources":["/Users/govind.singh/Desktop/GitHub React/React/react-saga/src/api/index.js"],"names":["KEY","URL","fetchImages","page","response","fetch","data","json","status","Error","errors","fetchImageStats","id"],"mappings":"AAAA;AACA,MAAMA,GAAG,GACL,6EADJ;AAEA,MAAMC,GAAG,GAAI,kCAAb;;AAEA,MAAMC,WAAW,GAAG,MAAMC,IAAN,IAAc;AAC9B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,GAAED,GAAI,oBAAmBG,IAAK,EAAtC,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,MAAIH,QAAQ,CAACI,MAAT,IAAmB,GAAvB,EAA4B;AACxB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,MAAf,CAAN;AACH;;AACD,SAAOJ,IAAP;AACH,CAPD;;AASA,MAAMK,eAAe,GAAG,MAAMC,EAAN,IAAY;AAChC,QAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,IAAGW,EAAG,cAAaZ,GAAI,EAA/B,CAA5B;AACA,QAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,MAAIH,QAAQ,CAACI,MAAT,IAAmB,GAAvB,EAA4B;AACxB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,MAAf,CAAN;AACH;;AACD,SAAOJ,IAAP;AACH,CAPD;;AASA,SAASJ,WAAT,EAAsBS,eAAtB","sourcesContent":["// get your own key from unsplash please ðŸ˜‡\nconst KEY =\n    '?client_id=5f96323678d05ff0c4eb264ef184556868e303b32a2db88ecbf15746e6f25e02';\nconst URL = `https://api.unsplash.com/photos/`;\n\nconst fetchImages = async page => {\n    const response = await fetch(`${URL}${KEY}&per_page=3&page=${page}`);\n    const data = await response.json();\n    if (response.status >= 400) {\n        throw new Error(data.errors);\n    }\n    return data;\n};\n\nconst fetchImageStats = async id => {\n    const response = await fetch(`${URL}/${id}/statistics${KEY}`);\n    const data = await response.json();\n    if (response.status >= 400) {\n        throw new Error(data.errors);\n    }\n    return data;\n};\n\nexport { fetchImages, fetchImageStats };\n"]},"metadata":{},"sourceType":"module"}